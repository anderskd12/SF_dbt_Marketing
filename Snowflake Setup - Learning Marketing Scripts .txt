-- LEARNING MKT DATABASE AND SECURITY SETUP -----------------------------------------------------------
CREATE DATABASE Learning_MKT 

CREATE SCHEMA Learning_Schema

Create Role Learning_Admin

-- Create custom role inherited by SYSADMIN system-defined role
USE ROLE SECURITYADMIN;


GRANT USAGE, CREATE TABLE 
    ON SCHEMA LEARNING_MKT.LEARNING_SCHEMA 
    TO ROLE Learning_Admin;
REVOKE CREATE TABLE 
    
GRANT OWNERSHIP ON SCHEMA LEARNING_SCHEMA TO LEARNING_ADMIN REVOKE CURRENT GRANTS

GRANT OWNERSHIP ON DATABASE LEARNING_MKT TO ROLE LEARNING_ADMIN

GRANT OWNERSHIP ON SCHEMA LEARNING_SCHEMA TO ROLE LEARNING_ADMIN



GRANT USAGE
  ON WAREHOUSE COMPUTE_WH
  TO ROLE Learning_Admin;
  

GRANT ROLE LEARNING_ADMIN TO ROLE SYSADMIN;
GRANT ROLE LEARNING_ADMIN TO USER KADMIN;

-- LEARNING MKT DATABASE AND SECURITY SETUP -----------------------------------------------------------
-- LEARNING MKT DATABASE AND SECURITY SETUP -----------------------------------------------------------




-- CREATE SOME TEST TABLES FOR HOLDING MARKETING DATA --------------------------------------------------
USE DATABASE LEARNING_MKT; 
USE SCHEMA LEARNING_SCHEMA;

-- SETUP SOME PRODUCT_AD DATA BY SUBJECT TYPE 
DROP TABLE PRODUCTS_ADS 
CREATE TABLE PRODUCTS_ADS
    (PRODUCT STRING, 
    SUBJECT_MATTER STRING,
    TYPE_OF_AD STRING,
    AD_LOCATION STRING,
    AD_ID INTEGER)

DELETE FROM PRODUCTS_ADS 

AGE_APP

INSERT INTO PRODUCTS_ADS VALUES 
    ('ABC', 'ENGLISH','ON-LINE', 'INSTAGRAM',101),
    ('ABC', 'ENGLISH','ON-LINE', 'FACEBOOK',102),
    ('ABC', 'MATH','MAIL', 'USPS',103),
    ('ABC', 'SPANISH','ON-LINE', 'X',104),
    ('AGE_APP', 'SCIENCE','ON-LINE', 'INSTAGRAM',105),
    ('AGE_APP', 'PE','ON-LINE', 'FACEBOOK',106),
    ('AGE_APP', 'ENGLISH','EMAIL', 'SPAM MAIL',107),
    ('AGE_APP', 'MATH','ON-LINE', 'X',108)

-- TAKE A LOOK AT THE DATA 
SELECT * FROM PRODUCTS_ADS WHERE TYPE_OF_AD = 'ON-LINE'
SELECT * FROM PRODUCTS_ADS WHERE TYPE_OF_AD = 'EMAIL'

SELECT * FROM PRODUCTS_ADS WHERE SUBJECT_MATTER = 'ENGLISH'
SELECT * FROM PRODUCTS_ADS WHERE PRODUCT  = 'ABC'

-- CREATE TABLE FOR MARKETING EFFORTS RELATED TO PRODUCT_ADS 
DROP TABLE ADS_COSTS 
CREATE TABLE ADS_COSTS 
 (AD_ID INTEGER,
 COST_PER_DAY NUMERIC 
  )

DELETE FROM ADS_COSTS  

INSERT INTO ADS_COSTS VALUES 
(101, 60),
(102, 40),
(103, 50),
(104, 55),
(105, 4300),
(106, 100),
(107, 1100),
(108, 400)


SELECT P.AD_ID, SUM(COST_PER_DAY) FROM PRODUCTS_ADS AS P JOIN ADS_COSTS AS A ON 
P.AD_ID = A.AD_ID 
GROUP BY P.AD_ID 

SELECT P.SUBJECT_MATTER, SUM(COST_PER_DAY) FROM PRODUCTS_ADS AS P JOIN ADS_COSTS AS A ON 
P.AD_ID = A.AD_ID 
GROUP BY SUBJECT_MATTER


CREATE TABLE CLICK_ACTIVITY 
(AD_ID INTEGER,
DATE_AD DATE,
CLICKS  INTEGER)


-- ***********************************************************************************************************************************
-- ***********************************************************************************************************************************
-- SETTING UP S3 BUCKET - SEE AWS IAM, ROLE, AND BUCKET FOR SETUP - YAML
-- ***********************************************************************************************************************************
-- ***********************************************************************************************************************************

CREATE OR REPLACE STORAGE INTEGRATION my_s3_integration_v3
  TYPE = EXTERNAL_STAGE
  STORAGE_PROVIDER = S3
  ENABLED = TRUE
  STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::567561414578:role/sf_marketing_ka2_s3'
  STORAGE_ALLOWED_LOCATIONS = ('s3://snowflake-marketing-ka-2025/Adds_Clicks_101-104.csv');  

  DESC INTEGRATION  my_s3_integration_v3


-- COPIED FROM S3!!!
COPY INTO CLICK_ACTIVITY
FROM @MKT_STAGE_K_2025
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1)
;


SELECT * FROM CLICK_ACTIVITY

SELECT AD_ID, SUM(CLICKS) FROM CLICK_ACTIVITY
GROUP BY AD_ID



*** IN AWS - SETUP ROLE: *********************************************************************************
AWS ACCOUNT:  567561414578
NAME:  sf_marketing_ka2_s3
PERMISSIONS:  AmazonS3ReadOnlyAccess


TRUSTED ENTITIES:
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::730812497434:user/yt501000-s"
            },
            "Action": "sts:AssumeRole",
            "Condition": {
                "StringEquals": {
                    "sts:ExternalId": "SRB08229_SFCRole=1_UlQh0NkXwGAnt5EB4wRWfk8QG4Y="
                }
            }
        }
    ]
}



*** BUCKET POLICY!!!  ***************************************************************************************
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowSnowflakeRoleAccess",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::567561414578:role/sf_marketing_ka2_s3"
            },
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::snowflake-marketing-ka-2025/*"
        }
    ]
}



-- SOME ANALYTICS ---------------------------------------------------
SELECT * FROM PRODUCTS_ADS AS P 
JOIN ADS_COSTS AS A ON 
    P.AD_ID = A.AD_ID 
JOIN CLICK_ACTIVITY AS C ON 
    C.AD_ID = A.AD_ID 

DROP VIEW VW_ADS 

CREATE  VIEW VW_ADS AS (
SELECT P.AD_ID, PRODUCT, SUBJECT_MATTER, TYPE_OF_AD, AD_LOCATION, COST_PER_DAY, DATE_AD, CLICKS FROM PRODUCTS_ADS AS P 
JOIN ADS_COSTS AS A ON 
    P.AD_ID = A.AD_ID 
JOIN CLICK_ACTIVITY AS C ON 
    C.AD_ID = A.AD_ID
WHERE P.AD_ID IN (SELECT DISTINCT AD_ID FROM CLICK_ACTIVITY)
    )

SELECT * FROM VW_ADS


SELECT AD_ID, SUM(CLICKS) AS TOTAL_CLICKS, SUM(COST_PER_DAY) AS TOTAL_COST
, SUM(COST_PER_DAY) / SUM(CLICKS) AS COST_PER_CLICK 
FROM VW_ADS 
GROUP BY AD_ID
    ORDER BY 4, 1, 2 


-- CAN ADD IN METRICS AROUND WHICH AD CAMPAIGN IS PRODUCING THE MOST CLICKS PER DOLLAR SPEND --------------------------------------
-- CAN ADD IN METRICS AROUND WHICH AD CAMPAIGN IS PRODUCING THE MOST CLICKS PER DOLLAR SPEND --------------------------------------
-- CAN ADD IN METRICS AROUND WHICH AD CAMPAIGN IS PRODUCING THE MOST CLICKS PER DOLLAR SPEND --------------------------------------






--- BIN -------------------------------------------------------------------------------------------------------------------------
--- BIN -------------------------------------------------------------------------------------------------------------------------
--- BIN -------------------------------------------------------------------------------------------------------------------------

-- RANDOM MANUAL DATA FOR TESTING ------- REPLACED BY AWS S3 DATASET -------------------

DELETE FROM CLICK_ACTIVITY 

INSERT INTO CLICK_ACTIVITY VALUES 
 (101, '01/01/2025', 23),
 (101, '01/02/2025', 30),
 (101, '01/03/2025', 10);

INSERT INTO CLICK_ACTIVITY VALUES 
 (102, '01/01/2025', 300),
 (102, '01/02/2025', 400),
 (102, '01/03/2025', 540);

INSERT INTO CLICK_ACTIVITY VALUES 
 (103, '01/01/2025', 1300),
 (103, '01/02/2025', 1400),
 (103, '01/03/2025', 1540);

INSERT INTO CLICK_ACTIVITY VALUES 
 (104, '01/01/2025', 30),
 (104, '01/02/2025', 40),
 (104, '01/03/2025', 50);

INSERT INTO CLICK_ACTIVITY VALUES 
 (105, '01/01/2025', 3),
 (106, '01/02/2025', 40),
 (107, '01/03/2025', 540);


SELECT * FROM PRODUCTS_ADS
SELECT * FROM ADS_COSTS



SELECT * FROM ADS_COSTS


-- Create raw table to hold click data 
CREATE TABLE RAW_CLICK_ACTIVITY
    (USER_ID INTEGER, CLICK_DATE DATE, AD_ID INTEGER)

-- EXAMPLE CLICK_PIPE_DATA 
INSERT INTO RAW_CLICK_ACTIVITY 
VALUES (10001, '01/01/2025', 101),
(10001, '02/01/2025', 101),
(10021, '02/01/2025', 101),
(10301, '02/01/2025', 101),
(10401, '02/01/2025', 102),
(10501, '02/01/2025', 102),
(10601, '02/01/2025', 102)

CREATE VIEW VSF_CLICKS_ACTIVITY AS 
(SELECT CLICK_DATE, AD_ID, COUNT(*) FROM RAW_CLICK_ACTIVITY GROUP BY CLICK_DATE, AD_ID)



-- LETS NOW:
    -- CREATE A TASK TO GENERATE DATA TO THE RAW_CLICK_ACTIVITY TABLE 

    
-- THEN USE DBT TO TRANSFORM THE RAW_CLICK_ACTIVITY TO SUM BY DATE AND AD_ID 
    -- AND MOVE IT TO THE CLICK_ACTIVITY WHICH IS GROUPED BY AD_ID AND DATE 



-- THERE WAS A SECURITY ISSUE WITH THE ROLE - 
GRANT SELECT ON RAW_CLICK_ACTIVITY TO ROLE LEARNING_ADMIN

WITH VSF_CLICKS_ACTIVITY AS 
(SELECT CLICK_DATE, AD_ID, COUNT(*) AS TOTAL_CLICKS FROM LEARNING_MKT.LEARNING_SCHEMA.RAW_CLICK_ACTIVITY GROUP BY CLICK_DATE, AD_ID)
SELECT * FROM VSF_CLICKS_ACTIVITY
